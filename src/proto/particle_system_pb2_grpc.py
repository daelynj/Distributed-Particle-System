# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from proto import particle_system_pb2 as proto_dot_particle__system__pb2


class GenerateStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GenerateParticles = channel.unary_stream(
                '/Generate/GenerateParticles',
                request_serializer=proto_dot_particle__system__pb2.RenderInstructions.SerializeToString,
                response_deserializer=proto_dot_particle__system__pb2.Frame.FromString,
                )


class GenerateServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GenerateParticles(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GenerateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GenerateParticles': grpc.unary_stream_rpc_method_handler(
                    servicer.GenerateParticles,
                    request_deserializer=proto_dot_particle__system__pb2.RenderInstructions.FromString,
                    response_serializer=proto_dot_particle__system__pb2.Frame.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Generate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Generate(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GenerateParticles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/Generate/GenerateParticles',
            proto_dot_particle__system__pb2.RenderInstructions.SerializeToString,
            proto_dot_particle__system__pb2.Frame.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
